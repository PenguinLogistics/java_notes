1. 举例
(o1, o2) -> Integer.compare(o1, o2);
2. 格式 () -> {}
    ->      lambda操作符 或 箭头操作符
    ->左边    lambda形参列表 (其实就是 原来接口中抽象方法的形参列表)
    ->右边    lambda体 (其实就是重写的抽象方法的方法体)
3. Lambda 表达式的使用(6种情况)
    // LambdaTest1
    总结：(能省就省啊！)
    ->左边    参数类型 省！ if一个参数 () 省！
    ->右边    if一条执行语句 {} 省！ return关键字 省！
4. Lambda 表达式的本质：作为函数式接口的实例

5. 如果一个接口中，只声明了一个抽象方法，则此接口就称为函数式接口
    我们可以通过Lambda表达式来创建该接口的对象
    可以在一个接口上使用@FunctionalInterface注解，这样做可以检查它是否是一个函数式接口。同时，javadoc也会包含一条声明，说明这个接口是一个函数式接口
    在 java.util.function包 下定义了java 8 的丰富的函数式接口

6. 所有以前用匿名实现类表示的现在都可以用Lambda表达式来写